/*
 * SwaggerHub Registry API
 *
 * The registry API for SwaggerHub
 *
 * API version: 1.0.97
 * Contact: info@swaggerhub.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"AddApiComment",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}/{version}/comments",
		AddApiComment,
	},

	Route{
		"AddApiCommentReply",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}/{version}/comments/{comment}/replies",
		AddApiCommentReply,
	},

	Route{
		"CloneApi",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}/{version}/clone",
		CloneApi,
	},

	Route{
		"CompareApisFromFile",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}/{version}/compare",
		CompareApisFromFile,
	},

	Route{
		"CreateIntegration",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}/{version}/integrations",
		CreateIntegration,
	},

	Route{
		"DeleteAll",
		strings.ToUpper("Delete"),
		"/apis/{owner}",
		DeleteAll,
	},

	Route{
		"DeleteApi",
		strings.ToUpper("Delete"),
		"/apis/{owner}/{api}",
		DeleteApi,
	},

	Route{
		"DeleteApiComment",
		strings.ToUpper("Delete"),
		"/apis/{owner}/{api}/{version}/comments/{comment}",
		DeleteApiComment,
	},

	Route{
		"DeleteApiCommentReply",
		strings.ToUpper("Delete"),
		"/apis/{owner}/{api}/{version}/comments/{comment}/replies/{reply}",
		DeleteApiCommentReply,
	},

	Route{
		"DeleteApiVersion",
		strings.ToUpper("Delete"),
		"/apis/{owner}/{api}/{version}",
		DeleteApiVersion,
	},

	Route{
		"DeleteCodegenLanguageOptions",
		strings.ToUpper("Delete"),
		"/apis/{owner}/{api}/{version}/.codegen/{generatorType}/lang/{language}",
		DeleteCodegenLanguageOptions,
	},

	Route{
		"DeleteCollaboration",
		strings.ToUpper("Delete"),
		"/apis/{owner}/{api}/.collaboration",
		DeleteCollaboration,
	},

	Route{
		"DeleteIntegration",
		strings.ToUpper("Delete"),
		"/apis/{owner}/{api}/{version}/integrations/{integrationId}",
		DeleteIntegration,
	},

	Route{
		"DisableApiNotifications",
		strings.ToUpper("Delete"),
		"/apis/{owner}/{api}/.notifications",
		DisableApiNotifications,
	},

	Route{
		"ForkApi",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}/{version}/fork",
		ForkApi,
	},

	Route{
		"ForkApiV1",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}/{version}/.fork",
		ForkApiV1,
	},

	Route{
		"GetApiComments",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/.comment",
		GetApiComments,
	},

	Route{
		"GetApiCommentsV2",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/comments",
		GetApiCommentsV2,
	},

	Route{
		"GetApiDefaultVersion",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/settings/default",
		GetApiDefaultVersion,
	},

	Route{
		"GetApiMetadata",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/.meta",
		GetApiMetadata,
	},

	Route{
		"GetApiNotifications",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/.notifications",
		GetApiNotifications,
	},

	Route{
		"GetApiTemplates",
		strings.ToUpper("Get"),
		"/apis/.template",
		GetApiTemplates,
	},

	Route{
		"GetApiTokenByCredentials",
		strings.ToUpper("Post"),
		"/token",
		GetApiTokenByCredentials,
	},

	Route{
		"GetApiVersions",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}",
		GetApiVersions,
	},

	Route{
		"GetCodegenLanguageOptions",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/.codegen/{generatorType}/lang/{language}",
		GetCodegenLanguageOptions,
	},

	Route{
		"GetCodegenLanguagesOptions",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/.codegen/{generatorType}/lang",
		GetCodegenLanguagesOptions,
	},

	Route{
		"GetCollaboration",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/.collaboration",
		GetCollaboration,
	},

	Route{
		"GetDefinition",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}",
		GetDefinition,
	},

	Route{
		"GetGitHubExportSettings",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/settings/github",
		GetGitHubExportSettings,
	},

	Route{
		"GetIntegrationById",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/integrations/{integrationId}",
		GetIntegrationById,
	},

	Route{
		"GetJsonDefinition",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/swagger.json",
		GetJsonDefinition,
	},

	Route{
		"GetLifecycleSettings",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/settings/lifecycle",
		GetLifecycleSettings,
	},

	Route{
		"GetOwnerApis",
		strings.ToUpper("Get"),
		"/apis/{owner}",
		GetOwnerApis,
	},

	Route{
		"GetPrivateAPIsCount",
		strings.ToUpper("Get"),
		"/apis/{owner}/private/count",
		GetPrivateAPIsCount,
	},

	Route{
		"GetPrivateSettings",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/settings/private",
		GetPrivateSettings,
	},

	Route{
		"GetUserAssets",
		strings.ToUpper("Get"),
		"/userAssets",
		GetUserAssets,
	},

	Route{
		"GetValidation",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/validation",
		GetValidation,
	},

	Route{
		"GetYamlDefinition",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/swagger.yaml",
		GetYamlDefinition,
	},

	Route{
		"PullFromSourceControl",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/pull/{integrationId}",
		PullFromSourceControl,
	},

	Route{
		"PushToSourceControl",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/{version}/push",
		PushToSourceControl,
	},

	Route{
		"PushToSourceControlWithIntegrationId",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/{version}/push/{integrationId}",
		PushToSourceControlWithIntegrationId,
	},

	Route{
		"RenameApi",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}/rename",
		RenameApi,
	},

	Route{
		"SaveApiDefinitionByTemplate",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}/.template",
		SaveApiDefinitionByTemplate,
	},

	Route{
		"SaveDefinition",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}",
		SaveDefinition,
	},

	Route{
		"SearchApis",
		strings.ToUpper("Get"),
		"/apis",
		SearchApis,
	},

	Route{
		"SearchApisAndDomains",
		strings.ToUpper("Get"),
		"/specs",
		SearchApisAndDomains,
	},

	Route{
		"SearchApisAndDomainsV2",
		strings.ToUpper("Get"),
		"/v2/specs",
		SearchApisAndDomainsV2,
	},

	Route{
		"SetApiCommentStatus",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/{version}/comments/{comment}/status/{status}",
		SetApiCommentStatus,
	},

	Route{
		"SetApiDefaultVersion",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/settings/default",
		SetApiDefaultVersion,
	},

	Route{
		"SetApiMetadata",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/.meta",
		SetApiMetadata,
	},

	Route{
		"SetApiNotifications",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/.notifications",
		SetApiNotifications,
	},

	Route{
		"SetCodegenLanguageOptions",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}/{version}/.codegen/{generatorType}/lang/{language}",
		SetCodegenLanguageOptions,
	},

	Route{
		"SetGitHubExportSettings",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/{version}/settings/github",
		SetGitHubExportSettings,
	},

	Route{
		"SetLifecycleSettings",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/{version}/settings/lifecycle",
		SetLifecycleSettings,
	},

	Route{
		"SetPrivateSettings",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/{version}/settings/private",
		SetPrivateSettings,
	},

	Route{
		"TransferApi",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}/.transfer",
		TransferApi,
	},

	Route{
		"UpdateApiComment",
		strings.ToUpper("Patch"),
		"/apis/{owner}/{api}/{version}/comments/{comment}",
		UpdateApiComment,
	},

	Route{
		"UpdateApiCommentReply",
		strings.ToUpper("Patch"),
		"/apis/{owner}/{api}/{version}/comments/{comment}/replies/{reply}",
		UpdateApiCommentReply,
	},

	Route{
		"UpdateApiComments",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}/{version}/comments/batch",
		UpdateApiComments,
	},

	Route{
		"UpdateCollaboration",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/.collaboration",
		UpdateCollaboration,
	},

	Route{
		"UpdateOwner",
		strings.ToUpper("Put"),
		"/apis/{owner}",
		UpdateOwner,
	},

	Route{
		"UpdateValidationErrorsOnAPI",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/{version}/validation",
		UpdateValidationErrorsOnAPI,
	},

	Route{
		"GetCustomRules",
		strings.ToUpper("Get"),
		"/custom-rules/{orgName}",
		GetCustomRules,
	},

	Route{
		"SaveCustomRules",
		strings.ToUpper("Put"),
		"/custom-rules/{orgName}",
		SaveCustomRules,
	},

	Route{
		"AddDomainComment",
		strings.ToUpper("Post"),
		"/domains/{owner}/{domain}/{version}/comments",
		AddDomainComment,
	},

	Route{
		"AddDomainCommentReply",
		strings.ToUpper("Post"),
		"/domains/{owner}/{domain}/{version}/comments/{comment}/replies",
		AddDomainCommentReply,
	},

	Route{
		"CloneDomain",
		strings.ToUpper("Post"),
		"/domains/{owner}/{domain}/{version}/clone",
		CloneDomain,
	},

	Route{
		"DeleteDomain",
		strings.ToUpper("Delete"),
		"/domains/{owner}/{domain}",
		DeleteDomain,
	},

	Route{
		"DeleteDomainComment",
		strings.ToUpper("Delete"),
		"/domains/{owner}/{domain}/{version}/comments/{comment}",
		DeleteDomainComment,
	},

	Route{
		"DeleteDomainCommentReply",
		strings.ToUpper("Delete"),
		"/domains/{owner}/{domain}/{version}/comments/{comment}/replies/{reply}",
		DeleteDomainCommentReply,
	},

	Route{
		"DeleteDomainVersion",
		strings.ToUpper("Delete"),
		"/domains/{owner}/{domain}/{version}",
		DeleteDomainVersion,
	},

	Route{
		"DisableDomainNotifications",
		strings.ToUpper("Delete"),
		"/domains/{owner}/{domain}/.notifications",
		DisableDomainNotifications,
	},

	Route{
		"ForkDomain",
		strings.ToUpper("Post"),
		"/domains/{owner}/{domain}/{version}/fork",
		ForkDomain,
	},

	Route{
		"ForkDomainV1",
		strings.ToUpper("Post"),
		"/domains/{owner}/{domain}/{version}/.fork",
		ForkDomainV1,
	},

	Route{
		"GetDomainComments",
		strings.ToUpper("Get"),
		"/domains/{owner}/{domain}/{version}/.comment",
		GetDomainComments,
	},

	Route{
		"GetDomainCommentsV2",
		strings.ToUpper("Get"),
		"/domains/{owner}/{domain}/{version}/comments",
		GetDomainCommentsV2,
	},

	Route{
		"GetDomainDefaultVersion",
		strings.ToUpper("Get"),
		"/domains/{owner}/{domain}/settings/default",
		GetDomainDefaultVersion,
	},

	Route{
		"GetDomainDefinition",
		strings.ToUpper("Get"),
		"/domains/{owner}/{domain}/{version}",
		GetDomainDefinition,
	},

	Route{
		"GetDomainExportSettings",
		strings.ToUpper("Get"),
		"/domains/{owner}/{domain}/{version}/settings/github",
		GetDomainExportSettings,
	},

	Route{
		"GetDomainJsonDefinition",
		strings.ToUpper("Get"),
		"/domains/{owner}/{domain}/{version}/domain.json",
		GetDomainJsonDefinition,
	},

	Route{
		"GetDomainLifecycleSettings",
		strings.ToUpper("Get"),
		"/domains/{owner}/{domain}/{version}/settings/lifecycle",
		GetDomainLifecycleSettings,
	},

	Route{
		"GetDomainMetadata",
		strings.ToUpper("Get"),
		"/domains/{owner}/{domain}/.meta",
		GetDomainMetadata,
	},

	Route{
		"GetDomainNotifications",
		strings.ToUpper("Get"),
		"/domains/{owner}/{domain}/.notifications",
		GetDomainNotifications,
	},

	Route{
		"GetDomainPrivateSettings",
		strings.ToUpper("Get"),
		"/domains/{owner}/{domain}/{version}/settings/private",
		GetDomainPrivateSettings,
	},

	Route{
		"GetDomainVersions",
		strings.ToUpper("Get"),
		"/domains/{owner}/{domain}",
		GetDomainVersions,
	},

	Route{
		"GetDomainYamlDefinition",
		strings.ToUpper("Get"),
		"/domains/{owner}/{domain}/{version}/domain.yaml",
		GetDomainYamlDefinition,
	},

	Route{
		"GetOwnerDomains",
		strings.ToUpper("Get"),
		"/domains/{owner}",
		GetOwnerDomains,
	},

	Route{
		"GetOwnerReferences",
		strings.ToUpper("Get"),
		"/domains/{owner}/.refs",
		GetOwnerReferences,
	},

	Route{
		"GetUserAssets",
		strings.ToUpper("Get"),
		"/userAssets",
		GetUserAssets,
	},

	Route{
		"GetUserDomains",
		strings.ToUpper("Get"),
		"/domains/.suggest/{type}",
		GetUserDomains,
	},

	Route{
		"RenameDomain",
		strings.ToUpper("Post"),
		"/domains/{owner}/{domain}/rename",
		RenameDomain,
	},

	Route{
		"SaveDomainDefinition",
		strings.ToUpper("Post"),
		"/domains/{owner}/{domain}",
		SaveDomainDefinition,
	},

	Route{
		"SearchApisAndDomains",
		strings.ToUpper("Get"),
		"/specs",
		SearchApisAndDomains,
	},

	Route{
		"SearchApisAndDomainsV2",
		strings.ToUpper("Get"),
		"/v2/specs",
		SearchApisAndDomainsV2,
	},

	Route{
		"SearchDomains",
		strings.ToUpper("Get"),
		"/domains",
		SearchDomains,
	},

	Route{
		"SetDomainCommentStatus",
		strings.ToUpper("Put"),
		"/domains/{owner}/{domain}/{version}/comments/{comment}/status/{status}",
		SetDomainCommentStatus,
	},

	Route{
		"SetDomainDefaultVersion",
		strings.ToUpper("Put"),
		"/domains/{owner}/{domain}/settings/default",
		SetDomainDefaultVersion,
	},

	Route{
		"SetDomainExportSettings",
		strings.ToUpper("Put"),
		"/domains/{owner}/{domain}/{version}/settings/github",
		SetDomainExportSettings,
	},

	Route{
		"SetDomainLifecycleSettings",
		strings.ToUpper("Put"),
		"/domains/{owner}/{domain}/{version}/settings/lifecycle",
		SetDomainLifecycleSettings,
	},

	Route{
		"SetDomainMetadata",
		strings.ToUpper("Put"),
		"/domains/{owner}/{domain}/.meta",
		SetDomainMetadata,
	},

	Route{
		"SetDomainNotifications",
		strings.ToUpper("Put"),
		"/domains/{owner}/{domain}/.notifications",
		SetDomainNotifications,
	},

	Route{
		"SetDomainPrivateSettings",
		strings.ToUpper("Put"),
		"/domains/{owner}/{domain}/{version}/settings/private",
		SetDomainPrivateSettings,
	},

	Route{
		"SuggestDomainEntity",
		strings.ToUpper("Get"),
		"/domains/{owner}/.suggest/{type}",
		SuggestDomainEntity,
	},

	Route{
		"TransferDomain",
		strings.ToUpper("Post"),
		"/domains/{owner}/{domain}/.transfer",
		TransferDomain,
	},

	Route{
		"UpdateDomainComment",
		strings.ToUpper("Patch"),
		"/domains/{owner}/{domain}/{version}/comments/{comment}",
		UpdateDomainComment,
	},

	Route{
		"UpdateDomainCommentReply",
		strings.ToUpper("Patch"),
		"/domains/{owner}/{domain}/{version}/comments/{comment}/replies/{reply}",
		UpdateDomainCommentReply,
	},

	Route{
		"UpdateDomainComments",
		strings.ToUpper("Post"),
		"/domains/{owner}/{domain}/{version}/comments/batch",
		UpdateDomainComments,
	},

	Route{
		"DeleteDraftApi",
		strings.ToUpper("Delete"),
		"/apis/{owner}/{api}/{version}/.draft",
		DeleteDraftApi,
	},

	Route{
		"DeleteDraftDomain",
		strings.ToUpper("Delete"),
		"/domains/{owner}/{domain}/{version}/.draft",
		DeleteDraftDomain,
	},

	Route{
		"GetDraft",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/.draft",
		GetDraft,
	},

	Route{
		"GetDraftDomain",
		strings.ToUpper("Get"),
		"/domains/{owner}/{domain}/{version}/.draft",
		GetDraftDomain,
	},

	Route{
		"SaveDraft",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/{version}/.draft",
		SaveDraft,
	},

	Route{
		"SaveDraftDomain",
		strings.ToUpper("Put"),
		"/domains/{owner}/{domain}/{version}/.draft",
		SaveDraftDomain,
	},

	Route{
		"CreateIntegration",
		strings.ToUpper("Post"),
		"/apis/{owner}/{api}/{version}/integrations",
		CreateIntegration,
	},

	Route{
		"DeleteIntegration",
		strings.ToUpper("Delete"),
		"/apis/{owner}/{api}/{version}/integrations/{integrationId}",
		DeleteIntegration,
	},

	Route{
		"GetIntegrationById",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/integrations/{integrationId}",
		GetIntegrationById,
	},

	Route{
		"DisableNotifications",
		strings.ToUpper("Delete"),
		"/notifications",
		DisableNotifications,
	},

	Route{
		"AcceptConfigurationOptions",
		strings.ToUpper("Put"),
		"/plugins/configurations/{owner}/options",
		AcceptConfigurationOptions,
	},

	Route{
		"AddPluginConfiguration",
		strings.ToUpper("Post"),
		"/plugins/configurations",
		AddPluginConfiguration,
	},

	Route{
		"AddPluginConfigurationDraft",
		strings.ToUpper("Post"),
		"/plugins/configurations/draft",
		AddPluginConfigurationDraft,
	},

	Route{
		"AddSystemPluginConfiguration",
		strings.ToUpper("Post"),
		"/plugins/systemconfigurations",
		AddSystemPluginConfiguration,
	},

	Route{
		"BuildConfigurationSchema",
		strings.ToUpper("Post"),
		"/plugins/configurations/schema",
		BuildConfigurationSchema,
	},

	Route{
		"CopyConfigurations",
		strings.ToUpper("Post"),
		"/plugins/configurations/{owner}/{api}/{version}/copy",
		CopyConfigurations,
	},

	Route{
		"DisablePlugin",
		strings.ToUpper("Delete"),
		"/plugins/{pluginId}",
		DisablePlugin,
	},

	Route{
		"GetAvailablePlugins",
		strings.ToUpper("Get"),
		"/plugins",
		GetAvailablePlugins,
	},

	Route{
		"GetPlugins",
		strings.ToUpper("Get"),
		"/plugins/configurations",
		GetPlugins,
	},

	Route{
		"GetSystemPluginConfigurations",
		strings.ToUpper("Get"),
		"/plugins/systemconfigurations",
		GetSystemPluginConfigurations,
	},

	Route{
		"LoadPluginConfiguration",
		strings.ToUpper("Get"),
		"/plugins/configurations/item/{id}",
		LoadPluginConfiguration,
	},

	Route{
		"OauthCallback",
		strings.ToUpper("Get"),
		"/plugins/configurations/oauth/{userUuid}/{username}/{pluginConfigId}/{oauthProviderId}",
		OauthCallback,
	},

	Route{
		"OauthCallbackWithQueryParams",
		strings.ToUpper("Get"),
		"/plugins/configurations/oauth",
		OauthCallbackWithQueryParams,
	},

	Route{
		"OauthCallbackWithStateOnly",
		strings.ToUpper("Get"),
		"/plugins/configurations/oauthWithState",
		OauthCallbackWithStateOnly,
	},

	Route{
		"RegisterPlugin",
		strings.ToUpper("Post"),
		"/plugins",
		RegisterPlugin,
	},

	Route{
		"RemovePluginConfiguration",
		strings.ToUpper("Delete"),
		"/plugins/configurations/{pluginId}",
		RemovePluginConfiguration,
	},

	Route{
		"SaveIntegrationPluginOfType",
		strings.ToUpper("Put"),
		"/plugins/configurations/{owner}/{api}/{version}/{integrationPluginType}",
		SaveIntegrationPluginOfType,
	},

	Route{
		"TriggerPluginConfiguration",
		strings.ToUpper("Post"),
		"/plugins/configurations/execute/{id}",
		TriggerPluginConfiguration,
	},

	Route{
		"UpdatePluginConfiguration",
		strings.ToUpper("Put"),
		"/plugins/configurations",
		UpdatePluginConfiguration,
	},

	Route{
		"UpdateSystemPluginConfiguration",
		strings.ToUpper("Put"),
		"/plugins/systemconfigurations",
		UpdateSystemPluginConfiguration,
	},

	Route{
		"AddSpecToProjectV2",
		strings.ToUpper("Put"),
		"/projects/{owner}/{project}/{specType}/{name}",
		AddSpecToProjectV2,
	},

	Route{
		"CreateProject",
		strings.ToUpper("Post"),
		"/projects/{owner}",
		CreateProject,
	},

	Route{
		"DeleteProjectV2",
		strings.ToUpper("Delete"),
		"/projects/{owner}/{projectId}",
		DeleteProjectV2,
	},

	Route{
		"GetOrgProjectsV2",
		strings.ToUpper("Get"),
		"/projects/{owner}",
		GetOrgProjectsV2,
	},

	Route{
		"GetProjectMembersV2",
		strings.ToUpper("Get"),
		"/projects/{owner}/{projectId}/members",
		GetProjectMembersV2,
	},

	Route{
		"GetProjectV2",
		strings.ToUpper("Get"),
		"/projects/{owner}/{projectId}",
		GetProjectV2,
	},

	Route{
		"GetUserProjects",
		strings.ToUpper("Get"),
		"/projects",
		GetUserProjects,
	},

	Route{
		"SaveProjectV2",
		strings.ToUpper("Put"),
		"/projects/{owner}/{projectId}",
		SaveProjectV2,
	},

	Route{
		"UpdateProjectMembersV2",
		strings.ToUpper("Put"),
		"/projects/{owner}/{projectId}/members",
		UpdateProjectMembersV2,
	},

	Route{
		"SearchApisAndDomainsV2",
		strings.ToUpper("Get"),
		"/v2/specs",
		SearchApisAndDomainsV2,
	},

	Route{
		"UploadAllSpecs",
		strings.ToUpper("Get"),
		"/v2/specs/upload",
		UploadAllSpecs,
	},

	Route{
		"UploadSpec",
		strings.ToUpper("Get"),
		"/v2/specs/upload/{typeOfSpec}/{owner}/{api}/{version}/{eventType}",
		UploadSpec,
	},

	Route{
		"PullFromSourceControl",
		strings.ToUpper("Get"),
		"/apis/{owner}/{api}/{version}/pull/{integrationId}",
		PullFromSourceControl,
	},

	Route{
		"PushToSourceControl",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/{version}/push",
		PushToSourceControl,
	},

	Route{
		"PushToSourceControlWithIntegrationId",
		strings.ToUpper("Put"),
		"/apis/{owner}/{api}/{version}/push/{integrationId}",
		PushToSourceControlWithIntegrationId,
	},

	Route{
		"Email",
		strings.ToUpper("Post"),
		"/support/email",
		Email,
	},

	Route{
		"AcceptConfigurationOptions",
		strings.ToUpper("Put"),
		"/plugins/configurations/{owner}/options",
		AcceptConfigurationOptions,
	},

	Route{
		"CheckOrgsStyleValidationStatus",
		strings.ToUpper("Post"),
		"/validations",
		CheckOrgsStyleValidationStatus,
	},

	Route{
		"GetOrgsStyleValidationConfiguration",
		strings.ToUpper("Get"),
		"/validations/{orgName}",
		GetOrgsStyleValidationConfiguration,
	},

	Route{
		"GetOrgsStyleValidationScanStatus",
		strings.ToUpper("Get"),
		"/validations/scanstatus/{orgName}",
		GetOrgsStyleValidationScanStatus,
	},

	Route{
		"UpdateOrgsStyleValidationConfiguration",
		strings.ToUpper("Put"),
		"/validations/{orgName}",
		UpdateOrgsStyleValidationConfiguration,
	},
}
